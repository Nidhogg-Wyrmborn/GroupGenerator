# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from GroupGenerator import GroupGeneratorWidget
from ModStore import ModStoreWidget
from Results import ResultsWidget


class MainHub(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)

        # make mainwindow accessible in other functions
        self.MainWindow = MainWindow

        # create central widget
        self.centralwidget = QtWidgets.QStackedWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # set central widget
        MainWindow.setCentralWidget(self.centralwidget)

        # create mainwindow widget and set
       # self.MW = MW()
        self.GroupGenerator = GroupGeneratorWidget()
        self.ModStore = ModStoreWidget()
        self.Results = ResultsWidget()
        self.centralwidget.addWidget(self.Results)
        self.centralwidget.setCurrentWidget(self.Results)

        # create menubar
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")

        # create menu options
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        self.menuUpdate_Module = QtWidgets.QMenu(self.menuOptions)
        self.menuUpdate_Module.setObjectName("menuUpdate_Module")
        self.menuModule_Store = QtWidgets.QMenu(self.menubar)
        self.menuModule_Store.setObjectName("menuModule_Store")

        # set menubar
        MainWindow.setMenuBar(self.menubar)

        # create statusbar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        # set statusbar
        MainWindow.setStatusBar(self.statusbar)

        # create actions
        self.actionStore = QtWidgets.QAction(MainWindow)
        self.actionStore.triggered.connect(self.openStore)
        self.actionStore.setObjectName("actionStore")
        self.action_PlaceHolder = QtWidgets.QAction(MainWindow) # REPLACE THIS WITH MODULE INIT FUNCTION
        self.action_PlaceHolder.triggered.connect(self.placeholderFunction)
        self.action_PlaceHolder.setObjectName("action_PlaceHolder") ####
        #self.actionStore_2 = QtWidgets.QAction(MainWindow) # OBSOLETE
        #self.actionStore_2.setObjectName("actionStore_2") # OBSOLETE
        self.actionUpdate_Store = QtWidgets.QAction(MainWindow)
        self.actionUpdate_Store.triggered.connect(self.updateStore)
        self.actionUpdate_Store.setObjectName("actionUpdate_Store")
        self.action_ModuleName1 = QtWidgets.QAction(MainWindow)
        self.action_ModuleName1.triggered.connect(self.moduleOne)
        self.action_ModuleName1.setObjectName("action_ModuleName1")
        self.action_ModuleName2 = QtWidgets.QAction(MainWindow)
        self.action_ModuleName2.triggered.connect(self.moduleTwo)
        self.action_ModuleName2.setObjectName("action_ModuleName2")
        #self.actionSettings = QtWidgets.QAction(MainWindow) # OBSOLETE
        #self.actionSettings.setObjectName("actionSettings") # OBSOLETE
        self.actionSettings_2 = QtWidgets.QAction(MainWindow)
        self.actionSettings_2.triggered.connect(self.settings)
        self.actionSettings_2.setObjectName("actionSettings_2")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.triggered.connect(self.saveCurrentContent)
        self.actionSave.setObjectName("actionSave")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.triggered.connect(self.loadContent)
        self.actionOpen.setObjectName("actionOpen")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.triggered.connect(self.Ender)
        self.actionQuit.setObjectName("actionQuit")

        # add actions to menus
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuUpdate_Module.addAction(self.action_ModuleName1)
        self.menuUpdate_Module.addAction(self.action_ModuleName2)
        self.menuOptions.addAction(self.actionUpdate_Store)
        self.menuOptions.addAction(self.menuUpdate_Module.menuAction())
        self.menuOptions.addSeparator()
        self.menuOptions.addAction(self.actionSettings_2)
        self.menuModule_Store.addAction(self.actionStore)
        self.menuModule_Store.addSeparator()
        self.menuModule_Store.addAction(self.action_PlaceHolder)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())
        self.menubar.addAction(self.menuModule_Store.menuAction())

        # retranslate ui
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def Ender(self):
        self.MainWindow.close()
        sys.exit(0)

    def openStore(self):
        self.centralwidget.addWidget(self.ModStore)
        self.centralwidget.setCurrentWidget(self.ModStore)

    def updateStore(self):
        print("update store")

    def moduleOne(self):
        print("update module placeholder 1")

    def moduleTwo(self):
        print("update module placeholder 2")

    def settings(self):
        print("open settings")

    def saveCurrentContent(self):
        print("save current content")
    
    def loadContent(self):
        print("load content")

    def placeholderFunction(self):
        print("load module from modules menu")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuOptions.setTitle(_translate("MainWindow", "Options"))
        self.menuUpdate_Module.setTitle(_translate("MainWindow", "Update Module"))
        self.menuModule_Store.setTitle(_translate("MainWindow", "Modules"))
        self.actionStore.setText(_translate("MainWindow", "Store"))
        self.action_PlaceHolder.setText(_translate("MainWindow", "{PlaceHolder}"))
        #self.actionStore_2.setText(_translate("MainWindow", "Store")) # OBSOLETE
        self.actionUpdate_Store.setText(_translate("MainWindow", "Update Store"))
        self.action_ModuleName1.setText(_translate("MainWindow", "{ModuleName1}"))
        self.action_ModuleName2.setText(_translate("MainWindow", "{ModuleName2}"))
        #self.actionSettings.setText(_translate("MainWindow", "Settings")) # OBSOLETE
        self.actionSettings_2.setText(_translate("MainWindow", "Settings"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = MainHub()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
